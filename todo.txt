sprint 1 :
- création d'un repository Github
- création + clone branche sprint1
- (package etuxxxx.framework.servlet) FrontServlet.java
- classe + web.xml
- tous les urls pointés sur FrontServlet

sprint2 :
- creation classe Mapping (package etuxxxx.framework)
    { String className, String method}
- attribut de FrontServlet: HashMap<String,Mapping> <- String: url

sprint 3 :
- récupération de tous les packages de l'application
- récupération de toutes les classes
- récupération de toutes les méthodes + urls
- init mappingUrl

sprint 4 :
- rangement: séparation framework + test
- création script (windows + linux)*****
- framework.jar: 

sprint 5 :
- class ModelView (package etu1748.framework)
    {String view;}
- dans FrontServlet:
    - test si url dans HashMap
        - oui: instanciation class
        - invoke method

sprint 7:
- manao set automatique ilay class avy @ paramètre de requête

sprint 8:
- asiana parameters ny method iray anaty fonction

sprint 9: file upload
FileUpload (string name, string path, byte[] file)
mijery fanaovana upload
ex:<input ... name="badge">

Client
    name
    ...
    FileUpload badge; //attribut

-> manampy sprint7, sprint8


sprint 10: singleton
(performance mémoire)

manao reset avant requête (atao valeur par défaut)

-> asiana liberté: annotation @scope("singleton")
HashMap<String nomClasse, Objet classe>: testena hoe iza no classe singleton  
-> créer na anaty init

test: asiana attribut appel  ny class
asian appel ++ isaky ny method


sprint 11: session

ex method:
//anonynme (mety daholo)
findAll()

@auth("admin")  //mila admin vao mety -> mi throws
delete()

@auth   //mila authentifié fotsiny -> mi throws
save()

-> testena hoe mety ve?

Anaty web.xml :
sessionName = isConnected
profilName = profil

anaty ModelView asiana attribut: HashMap<String,Object> session

any @ méthod ex:
@url(...)
authentificate(){
    //check login password
    // si ok
    session.put("isConnected",true)
    // si admin
    session.put("profil",admin)
}

sprint 12: session par objet
