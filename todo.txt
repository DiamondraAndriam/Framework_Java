sprint 1 :
- création d'un repository Github
- création + clone branche sprint1
- (package etuxxxx.framework.servlet) FrontServlet.java
- classe + web.xml
- tous les urls pointés sur FrontServlet

sprint2 :
- creation classe Mapping (package etuxxxx.framework)
    { String className, String method}
- attribut de FrontServlet: HashMap<String,Mapping> <- String: url

sprint 3 :
- récupération de tous les packages de l'application
- récupération de toutes les classes
- récupération de toutes les méthodes + urls
- init mappingUrl

sprint 4 :
- rangement: séparation framework + test
- framework.jar : jar cvfm framework.jar MANIFEST.MF *.class

sprint 5 :
- class ModelView (package etu1748.framework)
    {String view;}
- dans FrontServlet:
    - test si url dans HashMap
        - oui: instanciation class
        - invoke method
- framework.war : jar cvf framework.war *

sprint 6: 
(mandefa données av ao amin'ny controller makany amin'ny vue)
- ModelView:
    - attribut : data (<HashMap<String,Object>) + get set 
    - addItem(String,Object)
- FrontServlet:
    (return) ModelView (reflect)
        - data
        - iterer data
            -> element
                -> request.setAttribute(key,value)
- (test) Emp:
ModelView findAll(){
    ...
    mv.setUrl("...");
    List<Emp> l  = ...
    ...
    mv.addItem("list",l);
    return mv;
}
- jsp

sprint7:
(mandefa données avy ao amin'ny formulaire makany amin'ny controller)
- mitovy ny anaran'ny name ao @ formulaire sy ny attribut an'ilay objet 
- miinstancier objet any anaty controller
- manao set depuis paramètres azo @ requête
- manao save an'ilay objet (manampoitra ny azo avy anaty formulaire any anaty modèle)

sprint8: 
ajout de paramètre pour les méthodes

sprint9bis:
commande sql

sprint9:file upload

Objet: FileUpload (string name, string path, byte[] file)
mijery fanaovana upload
ex:<input ... name="badge">

Client
    name
    ...
    FileUpload badge; //attribut

-> manampy sprint7, sprint8
